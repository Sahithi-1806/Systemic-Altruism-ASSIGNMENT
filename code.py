# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f-5fU4tS6ACkxm8MH69whYEShLZdReEU
"""

pip install python-telegram-bot cohere

import os
import cohere
from telegram import Update, ForceReply
from telegram.ext import Updater
import nest_asyncio
import asyncio

from telegram import Update, ForceReply
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,  # Use lowercase 'filters' instead of 'Filters'
    CallbackContext
)

# Apply the patch to allow nested asyncio
nest_asyncio.apply()

# Initialize Cohere Client
cohere_client = cohere.Client('cohere-api')

# Telegram command /start
async def start(update: Update, context: CallbackContext) -> None:
    user = update.effective_user
    await update.message.reply_html(
        rf"Hi {user.mention_html()}! I'm a human rights chatbot. Ask me anything about human rights!"
    )

# Handling messages
async def handle_message(update: Update, context: CallbackContext) -> None:
    user_message = update.message.text
    response = cohere_client.generate(
        model='command-xlarge-nightly',
        prompt=f"You're a human rights expert. Answer this question with empathy and accuracy: {user_message}",
        max_tokens=500
    )
    await update.message.reply_text(response.generations[0].text)

async def main() -> None:
    # Create the Application instance
    application = Application.builder().token("telegram bot api").build()

    # Add handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # Start the bot
    await application.run_polling()

# Run the main function in a notebook environment
await main()
